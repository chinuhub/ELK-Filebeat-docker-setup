
input {
#	file {
#		path => "/usr/share/logstash/test.log"
#		start_position => "beginning"
#	}
beats {
    port => 5041 
  }

}
	filter {
	  if [fields][app] =~ "tomcat" {

	  grok{
		match => {"source" => "pmm--%{GREEDYDATA:client}-%{GREEDYDATA:appversion}-%{GREEDYDATA:appserver}.log"}
         }
	  grok {
	    match => { "message" => "(?<timestamp>%{MONTHDAY} %{MONTH} %{HOUR}:%{MINUTE}:%{SECOND}) (?<logger>[A-Za-z0-9$_.]+) %{LOGLEVEL:loglevel} * - (?<logmsg>[^\n]*)(?<rest>(.|\r|\n)*)$"}
	}
	 date {
	    match => ["timestamp","dd MMM HH:mm:ss.SSS"]     	
	    timezone => "UTC"
	    }
	  
	mutate {
	   gsub => ["logmsg","[\s]([\S]+:[ ]*)","&&##&&\1"]
	 }
	#if logmsg did not contain : (because no parameters were present there) then simply consider the msg as logmsg and kvpair as empty.
       if ([logmsg] =~ "&&##&&") {
		grok {
		   match => {"logmsg" => "(?<msg>([\s\S]*?))(\&\&##\&\&)+%{GREEDYDATA:kvpair}"} # "(?<msg>[^(\&\&##\&\&)]+)%{GREEDYDATA:kvpair}"}
		 }
		kv {
		    source => "kvpair"
	     	    value_split => ": "
	    	    trim_value => " "
	            field_split_pattern => "\&\&##\&\&"
	           }
       }else{
	 grok {
 		match => {"logmsg" => "%{GREEDYDATA:msg}" }		
          }

       }

	mutate{
	  remove_field => ["logmsg"] # ,"kvpair"]
	}
#	if "_grokparsefailure" in [tags] {
#	   drop { }
#	}	

       if ("" in [userAgent]){
  	useragent {
   	 source => "userAgent"
 	 target => "pmplayer" 
	}
       }
	### adding elapsed time field
        ### add elapsed time only if the requests have uid-cookie filed set
	if ([msg] =~ "NEW Request" or [msg] =~ "COMPLETED Request") and ("" in [uid-cookie]) {

		#first combine uuid-cookies and url in a new field
		mutate {
		  add_field => {
		    "user_url" => "%{uid-cookie}-%{url}"
		  }
		}
		#if msg contains NEW Request then tag it with start for unique field as combined one
		if [msg] =~ "NEW Request" {
			mutate {
			      add_tag => [ "start_tag" ]
			   }
		}
		#if msg contains COMPLETED Request then tag it with end for unique field as combined one
		if [msg] =~ "COMPLETED Request" {
			mutate {
			      add_tag => [ "end_tag" ]
			   }
		}
		#put the elapsed time at the end of the completed event.
		elapsed {
		    start_tag => "start_tag"
		    end_tag => "end_tag"
		    unique_id_field => "user_url"
		    new_event_on_match => false 
		    #periodic_flush => true 
		    add_tag => ["elapsed_time"]
		  }
		
        } #end of if for adding elapsed field.

	 } #end of if
	} # end of filter




output{
         elasticsearch {
            hosts => ["http://pmm-elasticsearch:9200"]
            manage_template => false
            #user => elastic
            #password => test123
            index => "%{[fields][app]}-%{[fields][server]}-%{+YYYY.MM.dd}"
          }
}
