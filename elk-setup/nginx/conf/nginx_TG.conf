user www-data;
# One worker per CPU-core.
worker_processes auto;
pid /run/nginx.pid;

worker_rlimit_nofile 65535;
events {
    worker_connections 9000; #768;
    multi_accept on;
    use epoll;
}

http {

    upstream backend {
	server {{BACKEND_SERVER}}:{{BACKEND_PORT}}; #192.168.221.230:8080; #staging, self contained, configured DB
    }

    upstream backendsps{
	server {{BACKEND_SPS}}:{{BACKEND_SPS_PORT}};

    }

server {
    listen {{BACKEND_SPS_PORT}};
	server_name {% for urlinfo in server_urls -%}
 			{{urlinfo.SERVER_URL}}
        {% endfor %};

    location /social-play-server {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $host;

      proxy_pass http://backendsps;
             proxy_redirect     off;

      # enable WebSockets
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
    }
  }


    server {
	listen 80;
	#real_ip_header X-Forwarded-For;
	#set_real_ip_from 192.168.255.0/24; uncomment this and the line above when the nginx is behind the node balancer
    	real_ip_header X-Real-IP;
    	real_ip_recursive on;
        #server_name ec2-35-178-179-18.eu-west-2.compute.amazonaws.com; #35.178.179.18 #staging.amuselabs.com;
	server_name {% for urlinfo in server_urls -%}
 			{{urlinfo.SERVER_URL}}
        {% endfor %};


	location /thumbnails {
            root /media;
        }

        location /pm-media {
            root /media;
        }

        location /socialsharing {
            root /media;
        }

        location /html {
            root /html;
        }
	
	location /apps {
	    root /media;
	}

  location / {
             proxy_pass http://backend;
             proxy_redirect     off;
             proxy_set_header   Host $host;
             proxy_set_header   X-Real-IP $remote_addr;
             proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
             proxy_set_header   X-Forwarded-Host $server_name;
        }


	location /pmm/dashboard {
            return 301 https://$server_name$request_uri;
        }

        location /pmm/crossword-create {
            return 301 https://$server_name$request_uri;
        }

        location /pmm/login {
            return 301 https://$server_name$request_uri;
        }

	location /wapo {
             proxy_pass http://backend/pmm-prod-20191025-0359-1.0.0-SNAPSHOT;
             proxy_redirect     off;
             proxy_set_header   Host $host;
             proxy_set_header   X-Real-IP $remote_addr;
             proxy_set_header   X-Forwarded-For $remote_addr;
             proxy_set_header   X-Forwarded-Host $server_name;
	     proxy_set_header   X-Forwarded-Proto https;
        }
	
	#https://serverfault.com/questions/619297/session-lost-in-tomcat-uing-nginx-as-proxy
#proxy_redirect is necessary to remap response.redirect calls from java app (via tomcat) to remap the url back to proxied location.
#pmm-prod-20191025-0359	

	 location /TG/ {
	     proxy_pass http://backend/pmm-prod-20191025-0359-1.0.0-SNAPSHOT/; #pmm-prod-20191018-0600-1.0.0-SNAPSHOT/;
     	     #proxy_redirect  $server_name/pmm-prod-20191018-0600-1.0.0-SNAPSHOT/ /TG/;
     	     proxy_redirect  http://$server_name/pmm-prod-20191025-0359-1.0.0-SNAPSHOT/ /TG/;
 	     proxy_cookie_path ~*^/.* /;       
             proxy_set_header Referer $http_referer;
             proxy_set_header   Host $host;
             proxy_set_header   X-Real-IP $remote_addr;
             proxy_set_header   X-Forwarded-For $remote_addr;
             #proxy_set_header   X-Forwarded-Host $server_name;
             proxy_set_header   X-Forwarded-Proto https; ##simulate https to the app backend.
 	}	

       
      #A sample loction that will allow fotward rewriting, backward rewriting and referer forwarding.
	location /newsday/ {
 	     proxy_pass http://backend/pmm-prod-20191025-0359-1.0.0-SNAPSHOT/;
             proxy_cookie_path ~*^/.* /;
             proxy_redirect  http://$server_name/pmm-prod-20191025-0359-1.0.0-SNAPSHOT/ /newsday/;
             proxy_set_header Referer $http_referer;
             proxy_set_header   Host $http_host;
             proxy_set_header   X-Real-IP $remote_addr;
             proxy_set_header   X-Forwarded-For $remote_addr;
            # proxy_set_header   X-Forwarded-Host $server_name;
             proxy_set_header   X-Forwarded-Proto $scheme; #https;
        }

       	location /maintenance.html { alias /usr/share/nginx/html/under_maintenance.html; }

        #error_page 402 /custom_404.html;

        error_page 404 /custom_404.html;
        location = /custom_404.html {
                root /usr/share/nginx/html;
                internal;
        }

        error_page 500 502 503 504 /custom_50x.html;
        location = /custom_50x.html {
                root /usr/share/nginx/html;
                internal;
        }
    }

    
    # just remove www if present (see https://www.nginx.com/blog/creating-nginx-rewrite-rules/)
    #server {
      #  listen 80 443 ssl;
      #  server_name www.45.33.68.139;
      #  return 301 $scheme://45.33.68.139$request_uri;
    #}

    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 600s; 
    
    proxy_connect_timeout       600s;
    proxy_send_timeout          600s;
    proxy_read_timeout          600s;
    send_timeout                600s;

    types_hash_max_size 2048;
    # server_tokens off;
    # server_names_hash_bucket_size 64;
    # server_name_in_redirect off;

    include /etc/nginx/mime.types;
    default_type application/octet-stream;

   
    # Logging Settings
    log_format apm '"$time_local" host=$host client=$remote_addr '
               'method=$request_method server_name=$server_name request="$request" '
               'request_length=$request_length '
               'status=$status bytes_sent=$bytes_sent '
               'body_bytes_sent=$body_bytes_sent '
               'referer=$http_referer '
               'user_agent="$http_user_agent" '
               'upstream_addr=$upstream_addr '
               'upstream_status=$upstream_status '
               'request_time=$request_time '
               'upstream_response_time=$upstream_response_time '
               'upstream_connect_time=$upstream_connect_time '
               'upstream_header_time=$upstream_header_time';
    access_log /var/log/nginx/access.log apm;
    error_log /var/log/nginx/error.log;
    #access_log /var/log/nginx/error-apm.log apm;


    ##
    # Gzip Settings
    ##
    gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

    ##
    # Virtual Host Configs
    ##
    # include /etc/nginx/conf.d/*.conf;
    # include /etc/nginx/sites-enabled/*;
}


#mail {
#        # See sample authentication script at:
#        # http://wiki.nginx.org/ImapAuthenticateWithApachePhpScript
# 
#        # auth_http localhost/auth.php;
#        # pop3_capabilities "TOP" "USER";
#        # imap_capabilities "IMAP4rev1" "UIDPLUS";
# 
#        server {
#                listen     localhost:110;
#                protocol   pop3;
#                proxy      on;
#        }
# 
#        server {
#                listen     localhost:143;
#                protocol   imap;
#                proxy      on;
#        }
#}
